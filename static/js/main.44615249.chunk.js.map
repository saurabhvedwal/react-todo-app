{"version":3,"sources":["logo.svg","components/SideBanner/SideBanner.js","components/TodoForm/TodoForm.js","components/Todo/Todo.js","components/TodoList/TodoList.js","axios-api.js","containers/TodoController/TodoController.js","components/TodoPanel/TodoPanel.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SideBanner","props","className","classes","src","logo","alt","TodoForm","onSubmit","e","add","name","value","content","task","onChange","addTask","target","due_date","minDate","Date","addDate","todo","disabled","saveBtnClass","push","style","width","editTask","todoIndex","id","dateChange","type","join","onClick","editableClick","margin","icon","faPencilAlt","faSave","delete","faTrashAlt","todoList","todos","Object","keys","map","key","index","editable","editTaskHandler","update","updateHandler","deleteHandler","maxHeight","overflowY","marginTop","api","axios","create","baseURL","TodoController","state","form","formValid","errorMsg","successMsg","success","todoEditToggleHandler","setState","prevState","updateTodoHandler","dateChangeHandler","date","dateStr","formatDate","addNewTodoHandler","preventDefault","stopPropagation","formData","FormData","addTodo","length","get","validationCheck","autoIndex","post","then","resp","status","data","setTimeout","catch","error","console","log","addTaskHandler","val","addDateHandler","apiUrl","put","deleteTodoHandler","Fragment","this","TodoList","d","month","getMonth","day","getDate","getFullYear","trim","Component","todoPanel","padding","layout","TodoPanel","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.44615249.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './../../logo.svg';\nimport './SideBanner.css';\n\nconst SideBanner = (props) => {\n    return (\n        <div className={props.classes}>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                React Todo App\n        </div>\n    );\n};\n\nexport default SideBanner;","import React from 'react';\nimport DatePicker from 'react-datepicker';\n\n\nconst TodoForm = (props) => {\n    return (\n        <form className=\"bg-dark form-horizontal p-3\" onSubmit={(e) => props.add(e)}>\n            <div className=\"form-group text-left\">\n                <label className=\"control-label text-white\">Add New Task</label>\n                <textarea className=\"form-control\" name=\"new_task\"\n                    value={props.content.task}\n                    onChange={(e) => props.addTask(e.target.value)}></textarea>\n            </div>\n            <div className=\"form-group text-left\">\n                <label className=\"control-label text-white\">Due Date</label>\n                <DatePicker className=\"form-control\" name=\"new_due_date\"\n                    value={props.content.due_date} minDate={new Date()}\n                    onChange={(value, e) => props.addDate(value, e)} />\n            </div>\n            <button className=\"btn btn-primary\">Save</button>\n        </form>\n    );\n};\n\nexport default TodoForm;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faSave } from '@fortawesome/free-solid-svg-icons';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Todo.css';\nimport DatePicker from 'react-datepicker';\n\n\nconst todo = (props) => {\n\n    const disabled = props.todo.disabled ? true : false;\n    const saveBtnClass = [\n        'btn', 'btn-sm', 'rounded-circle'\n    ]\n    if (disabled) {\n        saveBtnClass.push('btn-primary');\n    } else {\n        saveBtnClass.push('btn-success');\n    }\n\n\n    return (\n        <li className=\"list-group-item\">\n            <form className=\"row d-table\">\n                <div className=\"col-md-10 text-left d-table-cell\">\n                    <textarea className=\"form-control\" style={{ width: '100%' }}\n                        value={props.todo.task}\n                        disabled={disabled}\n                        onChange={(e) => props.editTask(e.target.value, props.todoIndex)}>{props.todo.task}</textarea>\n                    <DatePicker className=\"form-control\" name=\"due_date\"\n                        value={props.todo.due_date} id={props.todoIndex}\n                        onChange={(value, e) => props.dateChange(value, e, props.todoIndex)}\n                        minDate={new Date()}\n                        disabled={disabled} />\n\n                </div>\n                <div className=\"col-md-2 d-table-cell\">\n                    <div className=\"btn-group\">\n                        <button type=\"button\" className={saveBtnClass.join(\" \")}\n                            onClick={() => props.editableClick(props.todoIndex)}\n                            style={{ margin: '0 5px' }}>\n                            <FontAwesomeIcon icon={disabled ? faPencilAlt : faSave} />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-sm btn-danger rounded-circle\"\n                            onClick={() => props.delete(props.todoIndex)} style={{ margin: '0 5px' }}>\n                            <FontAwesomeIcon icon={faTrashAlt} />\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </li >\n    );\n}\n\nexport default todo;","import React from 'react';\nimport Todo from '../Todo/Todo';\n\nconst todoList = (props) => {\n    const todos = props.todos;\n    const todoList = Object.keys(todos).map((key, index) => {\n        return (\n            <Todo key={key} todo={todos[key]}\n                editableClick={props.editable}\n                todoIndex={key}\n                dateChange={props.dateChange}\n                editTask={props.editTaskHandler}\n                update={props.updateHandler}\n                delete={props.deleteHandler}\n            ></Todo>\n        );\n    });\n\n    return (\n        <ul className=\"list-group\" style={{ maxHeight: '500px', overflowY: 'autp', marginTop: '16px' }}>\n            {todoList}\n        </ul>\n    );\n}\n\nexport default todoList;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://react-todo-app-c394a.firebaseio.com/'\n});\n\nexport default api;","import React, { Component } from 'react';\nimport TodoForm from '../../components/TodoForm/TodoForm';\nimport TodoList from '../../components/TodoList/TodoList';\nimport api from '../../axios-api';\nimport { exportDefaultSpecifier } from '@babel/types';\n\n\nclass TodoController extends Component {\n    state = {\n        todos: {},\n        form: {\n            due_date: '',\n            task: ''\n        },\n        formValid: true,\n        errorMsg: 'Error',\n        successMsg: '',\n        success: false\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <TodoForm add={this.addNewTodoHandler} addDate={this.addDateHandler} addTask={this.addTaskHandler} content={this.state.form} />\n                {this.state.formValid ? null : <div className=\"alert alert-danger text-left\">{this.state.errorMsg}</div>}\n                {this.state.success ? <div className=\"alert alert-success\" style={{ marginTop: '5px' }}>{this.state.successMsg}</div> : null}\n                <TodoList todos={this.state.todos}\n                    editable={this.todoEditToggleHandler}\n                    dateChange={this.dateChangeHandler}\n                    editTaskHandler={this.editTaskHandler}\n                    updateHandler={this.updateTodoHandler}\n                    deleteHandler={this.deleteTodoHandler}\n                />\n            </React.Fragment>\n        );\n    }\n\n    async componentDidMount() {\n        api.get('/todos.json')\n            .then((resp) => {\n                if (resp.status == 200) {\n                    const todos = { ...resp.data };\n                    const modResp = Object.keys(todos);\n                    modResp.map((key, index) => {\n                        todos[key]['disabled'] = true;\n                        return todos[key];\n                    });\n                    this.setState({ todos: todos });\n                }\n            });\n    }\n\n    todoEditToggleHandler = (index) => {\n        const todos = { ...this.state.todos };\n        if (todos[index]['disabled']) {\n            todos[index]['disabled'] = !todos[index]['disabled'];\n            this.setState((prevState, props) => {\n                return { todos: todos }\n            });\n        } else {\n            this.updateTodoHandler(index);\n        }\n    }\n\n    dateChangeHandler = (date, e, index) => {\n        this.setState((prevState, props) => {\n            const todos = { ...prevState.todos };\n            const dateStr = this.formatDate(date);\n            todos[index]['due_date'] = dateStr;\n            return { todos: todos }\n        });\n    }\n\n    formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n        month = month.length < 2 ? '0' + month : month;\n        day = day.length < 2 ? '0' + day : day;\n        return [year, month, day].join('-');\n    }\n\n    validationCheck(todo, index) {\n        if (todo.task.trim() == '') {\n            this.setState({ formValid: false, errorMsg: 'Please fill task field' });\n            console.log('Not Valid');\n            return false;\n        } else if (todo.due_date.trim() == '') {\n            this.setState({ formValid: false, errorMsg: 'Please fill due date field' });\n            console.log('Not Valid');\n            return false;\n        } else {\n            this.setState({ formValid: true });\n            console.log('Valid');\n            return true;\n\n        }\n    }\n\n    addNewTodoHandler = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const form = e.target;\n        const formData = new FormData(form);\n        const newId = this.state.todos.length + 1;\n        const addTodo = {\n            id: newId,\n            task: formData.get('new_task'),\n            due_date: formData.get('new_due_date')\n        };\n        if (!this.validationCheck(addTodo)) {\n            return false;\n        }\n        const autoIndex = this.state.todos.length + 1;\n        const apiUrl = '/todos.json';\n\n        api.post(apiUrl, addTodo)\n            .then((resp) => {\n                if (resp.status == 200) {\n                    this.setState((prevState, props) => {\n                        const todos = { ...prevState.todos };\n                        addTodo['disabled'] = true;\n                        addTodo['id'] = autoIndex;\n                        todos[resp.data.name] = addTodo;\n                        return {\n                            todos: todos, form: {\n                                due_date: '',\n                                task: ''\n                            },\n                            success: true,\n                            successMsg: 'Added Successfully!'\n                        };\n                    });\n                }\n                setTimeout(() => {\n                    this.setState({ success: false, successMsg: '' });\n                }, 3000);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    addTaskHandler = (val) => {\n        this.setState((prevState, props) => {\n            return {\n                form: {\n                    task: val,\n                    due_date: prevState.form.due_date\n                }\n            };\n        });\n    }\n\n    addDateHandler = (date, e) => {\n        const dateStr = this.formatDate(date);\n        this.setState((prevState, props) => {\n            return {\n                form: {\n                    task: prevState.form.task,\n                    due_date: dateStr\n                }\n            };\n        });\n    }\n\n    editTaskHandler = (val, index) => {\n        this.setState((prevState, props) => {\n            const todos = { ...prevState.todos };\n            todos[index] = {\n                id: prevState.todos[index].id,\n                task: val,\n                due_date: prevState.todos[index].due_date,\n                disabled: prevState.todos[index].disabled\n            }\n            return {\n                todos: todos\n            };\n        });\n    }\n\n    updateTodoHandler = (index) => {\n        const apiUrl = '/todos/' + index + '.json';\n        const editTask = this.state.todos[index];\n        if (!this.validationCheck(editTask, index)) {\n            return false;\n        }\n        delete editTask['disabled'];\n        api.put(apiUrl, editTask)\n            .then((resp) => {\n                if (resp.status == 200) {\n                    this.setState((prevState, props) => {\n                        const todos = { ...prevState.todos };\n                        todos[index]['disabled'] = true;\n                        return {\n                            todos: todos,\n                            success: true,\n                            successMsg: 'Updated Successfully!'\n                        };\n                    });\n                    setTimeout(() => {\n                        this.setState({ success: false, successMsg: '' });\n                    }, 3000);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    deleteTodoHandler = (index) => {\n        const apiUrl = '/todos/' + index + '.json';\n        api.delete(apiUrl)\n            .then((resp) => {\n                console.log(resp);\n                if (resp.status == 200) {\n                    this.setState((prevState, props) => {\n                        const todos = { ...prevState.todos };\n                        delete todos[index];\n                        return {\n                            todos: todos,\n                            success: true,\n                            successMsg: 'Updated Deleted!'\n                        };\n                    });\n                    setTimeout(() => {\n                        this.setState({ success: false, successMsg: '' });\n                    }, 3000);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n}\n\nexport default TodoController;","import React from 'react';\nimport TodoController from '../../containers/TodoController/TodoController';\n\n\nconst todoPanel = (props) => {\n    const style = {\n        padding: '5px 50px',\n    };\n    return (\n        <div className={props.classes}>\n            <h1 className=\"padd\" style={{marginTop: '16px'}}>Todos</h1>\n            <div className=\"col-md-12\" style={style}>\n                <TodoController/>\n            </div>\n        </div>\n    );\n};\n\nexport default todoPanel;","import React from 'react';\nimport SideBanner from '../SideBanner/SideBanner';\nimport TodoPanel from '../TodoPanel/TodoPanel';\n\nconst layout = (props) => {\n\n    return (\n        <main className=\"App row\">\n            <SideBanner classes=\"App-header col-md-4\" />\n            <TodoPanel classes=\"col-md-8\" />\n        </main>\n    );\n\n};\n\nexport default layout;","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Layout>\n                </Layout>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}